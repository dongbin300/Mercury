<prism:PrismApplication x:Class="ChartViewerPrism.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/" >
    <Application.Resources>
        <BooleanToVisibilityConverter x:Key="btv"/>

        <Color x:Key="LongColor" R="14" G="203" B="209" />
        <Color x:Key="ShortColor" R="246" G="70" B="93" />

        <SolidColorBrush x:Key="ChartBackground" Color="#131722"/>
        <SolidColorBrush x:Key="Background" Color="#24292E"/>
        <SolidColorBrush x:Key="SelectedBackground" Color="#444D56"/>
        <SolidColorBrush x:Key="Separator" Color="#141414"/>
        <SolidColorBrush x:Key="Long" Color="#0ECB81"/>
        <SolidColorBrush x:Key="Short" Color="#F6465D"/>
        <SolidColorBrush x:Key="Binance" Color="#F0B90B"/>

        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="#F1F1F1" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontFamily" Value="Meiryo UI" />
            <Setter Property="FontSize" Value="13" />
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="Description">
            <Setter Property="Foreground" Value="Silver" />
            <Setter Property="FontFamily" Value="Meiryo UI" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Margin" Value="1,7" />
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="Error">
            <Setter Property="Foreground" Value="Red" />
            <Setter Property="FontFamily" Value="Meiryo UI" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="Margin" Value="10,7" />
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="#F1F1F1" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontFamily" Value="Meiryo UI" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="BorderBrush" Value="#666" />
            <Setter Property="BorderThickness" Value="0 0 0 1" />
            <Setter Property="Margin" Value="3 0" />
            <Setter Property="CaretBrush" Value="{StaticResource Long}" />
            <Style.Triggers>
                <Trigger Property="TextBox.IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource Long}" />
                </Trigger>
                <Trigger Property="TextBox.IsMouseOver" Value="False">
                    <Setter Property="BorderBrush" Value="#666" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Long}" />
            <Setter Property="Foreground" Value="#000000" />
            <Setter Property="FontWeight" Value="UltraBold" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border" CornerRadius="2"
                     Background="{TemplateBinding Background}">
                            <TextBlock Name="TextBlock" 
                                   Text="{TemplateBinding Content}" 
                                   Margin="{TemplateBinding Padding}" 
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Long}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                                <Setter TargetName="TextBlock" Property="Foreground" Value="{StaticResource Long}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#region ComboBox -->
        <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="ComboBoxToggleButton">
            <Grid Margin="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border" Grid.ColumnSpan="2" Background="Transparent" BorderBrush="#666" BorderThickness="0" />
                <Border x:Name="ContentBorder" Grid.Column="0" Margin="1" Background="Transparent" BorderBrush="#999" BorderThickness="0" />
                <Path x:Name="Arrow" Grid.Column="1" Fill="#F4F4f4" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#49494D" />
                    <Setter TargetName="ContentBorder" Property="Background" Value="#49494D" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#49494D" />
                    <Setter TargetName="ContentBorder" Property="Background" Value="#49494D" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="#49494D" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAA" />
                    <Setter Property="Foreground" Value="#111"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="Transparent" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate TargetType="{x:Type TextBox}" x:Key="ComboBoxTextBox">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Foreground" Value="#F4F4F4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,3,23,3" VerticalAlignment="Center" HorizontalAlignment="Right" />
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="#333337" BorderThickness="1.2" BorderBrush="#666"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained">
                                        </StackPanel>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="Height" Value="30" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter Margin="5" HorizontalAlignment="Right" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource SelectedBackground}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#region CheckBox -->
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Margin" Value="3,2" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border"
                         Width="20" Height="20" CornerRadius="3" 
                         Background="#C0C0C0" BorderThickness="1" BorderBrush="#404040">
                                    <Path 
                         x:Name="CheckMark"
                         Width="11" Height="11" Margin="1" SnapsToDevicePixels="False" 
                         Stroke="#EEEEEE" StrokeThickness="3"
                         Data="M 1 3 L 5 8 L 10 3" />
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"
                               RecognizesAccessKey="True"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#0ECB81" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#808080" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#606060" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
    </Application.Resources>
</prism:PrismApplication>
