<Application x:Class="MarinerX.ChartViewer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MarinerX.ChartViewer"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <BooleanToVisibilityConverter x:Key="btv"/>

        <Color x:Key="LongColor" R="14" G="203" B="209" />
        <Color x:Key="ShortColor" R="246" G="70" B="93" />

        <SolidColorBrush x:Key="ChartBackground" Color="#131722"/>
        <SolidColorBrush x:Key="Background" Color="#24292E"/>
        <SolidColorBrush x:Key="SelectedBackground" Color="#444D56"/>
        <SolidColorBrush x:Key="Separator" Color="#141414"/>
        <SolidColorBrush x:Key="Long" Color="#0ECB81"/>
        <SolidColorBrush x:Key="Short" Color="#F6465D"/>
        <SolidColorBrush x:Key="Binance" Color="#F0B90B"/>

        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="#F1F1F1" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontFamily" Value="Meiryo UI" />
            <Setter Property="FontSize" Value="13" />
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="Description">
            <Setter Property="Foreground" Value="Silver" />
            <Setter Property="FontFamily" Value="Meiryo UI" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Margin" Value="1,7" />
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="Error">
            <Setter Property="Foreground" Value="Red" />
            <Setter Property="FontFamily" Value="Meiryo UI" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="Margin" Value="10,7" />
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="#F1F1F1" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontFamily" Value="Meiryo UI" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="BorderBrush" Value="#666" />
            <Setter Property="BorderThickness" Value="0 0 0 1" />
            <Setter Property="CaretBrush" Value="{StaticResource Long}" />
            <Style.Triggers>
                <Trigger Property="TextBox.IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource Long}" />
                </Trigger>
                <Trigger Property="TextBox.IsMouseOver" Value="False">
                    <Setter Property="BorderBrush" Value="#666" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type PasswordBox}">
            <Setter Property="PasswordChar" Value="*"/>
            <Setter Property="Foreground" Value="#F1F1F1" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontFamily" Value="Meiryo UI" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="BorderBrush" Value="#666" />
            <Setter Property="BorderThickness" Value="0 0 0 1" />
            <Setter Property="CaretBrush" Value="{StaticResource Long}" />
            <Style.Triggers>
                <Trigger Property="TextBox.IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource Long}" />
                </Trigger>
                <Trigger Property="TextBox.IsMouseOver" Value="False">
                    <Setter Property="BorderBrush" Value="#666" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Image}">
            <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
            <Setter Property="RenderOptions.EdgeMode" Value="Aliased" />
            <Setter Property="UseLayoutRounding" Value="True" />
        </Style>

        <Style TargetType="ListBoxItem" x:Key="BaseListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="border" Padding="2" SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#49494D"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource Long}" />
            <Setter Property="Foreground" Value="#000000" />
            <Setter Property="FontWeight" Value="UltraBold" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border" CornerRadius="2"
                            Background="{TemplateBinding Background}">
                            <TextBlock Name="TextBlock" 
                                          Text="{TemplateBinding Content}" 
                                          Margin="{TemplateBinding Padding}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Long}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                                <Setter TargetName="TextBlock" Property="Foreground" Value="{StaticResource Long}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#region ComboBox -->
        <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="ComboBoxToggleButton">
            <Grid Margin="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border" Grid.ColumnSpan="2" Background="Transparent" BorderBrush="#666" BorderThickness="0" />
                <Border x:Name="ContentBorder" Grid.Column="0" Margin="1" Background="Transparent" BorderBrush="#999" BorderThickness="0" />
                <Path x:Name="Arrow" Grid.Column="1" Fill="#F4F4f4" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#49494D" />
                    <Setter TargetName="ContentBorder" Property="Background" Value="#49494D" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#49494D" />
                    <Setter TargetName="ContentBorder" Property="Background" Value="#49494D" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="#49494D" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAA" />
                    <Setter Property="Foreground" Value="#111"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="Transparent" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate TargetType="{x:Type TextBox}" x:Key="ComboBoxTextBox">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Foreground" Value="#F4F4F4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,3,23,3" VerticalAlignment="Center" HorizontalAlignment="Right" />
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="#333337" BorderThickness="1.2" BorderBrush="#666"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained">
                                        </StackPanel>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="Height" Value="30" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter Margin="5" HorizontalAlignment="Right" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource SelectedBackground}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ComboBox}" x:Key="IconComboBox">
            <Setter Property="Foreground" Value="#F4F4F4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,3,23,3" VerticalAlignment="Center" HorizontalAlignment="Left" />
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="#333337" BorderThickness="1.2" BorderBrush="#666"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained">
                                        </StackPanel>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{Binding Icon}" Width="20" Height="20" Margin="0 0 5 0"/>
                            <TextBlock Text="{Binding Text}"/>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="Height" Value="30" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter Margin="5 0" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource SelectedBackground}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region CheckBox -->
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Width" Value="32" />
            <Setter Property="Height" Value="16" />
            <Setter Property="Margin" Value="10,0" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border x:Name="_border" Background="#858585" CornerRadius="8">
                            <Ellipse x:Name="_ellipse" HorizontalAlignment="Left" Fill="#555555" Width="21" Height="21" Margin="-5" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="_ellipse" Property="HorizontalAlignment" Value="Right" />
                                <Setter TargetName="_ellipse" Property="Fill" Value="{StaticResource Long}" />
                                <Setter TargetName="_border" Property="Background" Value="{StaticResource Long}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region ScrollViewer -->
        <Style TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.ColumnSpan="2" Grid.RowSpan="2" />
                            <ScrollBar Grid.Column="1" x:Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Background="Transparent" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarTrackThumb" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                            <Border x:Name="CornerScrollBarRectangle" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Margin="0,1,0,1" Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="CornerScrollBarRectangle" Property="Width" Value="Auto" />
                                <Setter TargetName="CornerScrollBarRectangle" Property="Height" Value="6" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="#ADABAB" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Width" Value="7" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="7" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>
                            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollBarTrackThumb}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>
                            <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="8" />
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region GroupBox -->
        <Style TargetType="{x:Type GroupBox}">
            <Setter Property="FontFamily" Value="Meiryo UI" />
            <Setter Property="Margin" Value="3,3,3,-18" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupBox}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" BorderThickness="1" BorderBrush="{StaticResource Long}" Background="{StaticResource Long}">
                                <Label Foreground="White" Height="28" FontWeight="Bold">
                                    <ContentPresenter ContentSource="Header" RecognizesAccessKey="True"/>
                                </Label>
                            </Border>
                            <Border Grid.Row="1" BorderThickness="3,0,3,3" BorderBrush="{StaticResource Long}">
                                <ContentPresenter Margin="4" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region DataGrid -->
        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="FontFamily" Value="Meiryo UI" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Foreground" Value="#EEE" />
            <Setter Property="Background" Value="{StaticResource ChartBackground}" />
        </Style>

        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="FontFamily" Value="Meiryo UI" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Background" Value="{StaticResource ChartBackground}" />
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="{StaticResource LongColor}" />
            </Style.Resources>
        </Style>

        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="FontFamily" Value="Meiryo UI" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Height" Value="35" />
            <Setter Property="Padding" Value="4,0" />
            <Setter Property="Foreground" Value="#EEE" />
            <Setter Property="Background" Value="{StaticResource ChartBackground}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
        </Style>

        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="Margin" Value="0" />
            <Setter Property="FontFamily" Value="Meiryo UI" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Background" Value="{StaticResource ChartBackground}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="RowHeaderWidth" Value="0" />
            <Setter Property="GridLinesVisibility" Value="Horizontal" />
            <Setter Property="HorizontalGridLinesBrush" Value="#373737" />
        </Style>
        <!--#endregion-->
    </Application.Resources>
</Application>
